#summary Describes the FactoryCreatorImpl class.
#labels Phase-Implementation,FactoryCreatorImpl,StartingPoint

= Introduction =

When TDDing/BDDing using of the keywords "new" makes it hard to test interactions as you have no control over how an object is created within another class. One was to get around this is by passing in a Factory interface to abstract all new object creation behind methods of its interface. This way the Factory interface can be easily mocked and object creation via its factory methods can be easily controlled in a test case.

At some point you will need a concrete implementation of the Factory interface. The class that implements this interface may be simple but can be hard to test if it interacts directly with concrete classes. Thus in many instances these Factory implementations are not tested or have rudimentary tests that don't warrant a test at all.

= Why do I need the FactoryCreator? =

The FactoryCreator manages the link between a Factory interface and the real implementation of each of the factory methods on that interface. This means that you don't have to write a concrete implementation of the Factory interface or its test case, thereby allowing you to concentrate on other more pressing matters!

= Examples =